import{normalizePath as t}from"vite";import{dirname as r}from"path";import{fileURLToPath as e}from"url";const n=t=>t.replace(/^.*[\\\/]/,"");function o(t,r={}){const e=new Map,o=new Array,a=(t,r=!1)=>{void 0!==e.get(t)&&r||e.set(t,r)},c=(t,r="")=>{for(const[e,i]of Object.entries(t)){const t=`${r}${e}`;if("object"==typeof i)if(i.src){const r=i,e=r.src,c=r.dynamic??!0;a(e,c);const s={};r.action&&(s.action=r.action),r.dynamic&&(s.dynamic=r.dynamic),r.errorElement&&(s.errorElement=r.errorElement),r.hasErrorBoundary&&(s.errorElement=r.hasErrorBoundary),r.loader&&(s.loader=r.loader),r.shouldRevalidate&&(s.shouldRevalidate=r.shouldRevalidate),o.push({route:t,component:n(e),config:s})}else c(i,t);else a(i),o.push({route:t,component:n(i)})}};c(t);return`\n  import React from 'react';\n  import { createBrowserRouter } from 'react-router-dom';\n  import { lazy } from 'react';\n\n  ${(()=>{const t=[],r=[];for(const[o,a]of e){const e=n(o);a?r.push(`const ${e} = lazy(() => import('${o}'))`):t.push(`import ${e} from '${o}'`)}return[...t,...r].join("\n")})()}\n  \n  const router = createBrowserRouter(\n    [${o.map((({route:t,component:r,config:e})=>`\n        {\n          path: '${t}',\n          element: /*#__PURE__*/React.createElement(${r}, null),\n          ${(t=>{const r="async";return Object.entries(t).map((([t,e])=>{if("function"==typeof e){let n=e.toString();return n.startsWith(r)&&(n=n.slice(r.length,n.length).trim()),n.startsWith("function")?`${t}: ${e.toString()}`:`${e.toString()}`}return`${t}: ${e},`})).join("\n")})(e??{})}\n        }\n      `))}],\n    ${JSON.stringify(r)}\n  );\n  \n  export default router;\n  `}const a=r(e(import.meta.url));function c(r){const{name:e,option:n,root:c}=r,i=`${c??a}/${t(e??"router.config.js")}`;return{name:"vite-plugin-react-router-dom",enforce:"pre",async load(t){if(t.includes(i)){return o((await import(t)).default,n)}return null}}}export{c as default};
//# sourceMappingURL=vite-plugin-react-router-dom.js.map
